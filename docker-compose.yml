version: '3.8'

services:
  headon-template:
    # Use image from registry if available, otherwise build locally
    image: ${DOCKER_IMAGE:-headon-local}
    build:
      context: .
      dockerfile: Dockerfile
      args:
        - NEXT_PUBLIC_SUPABASE_URL=${NEXT_PUBLIC_SUPABASE_URL}
        - NEXT_PUBLIC_SUPABASE_ANON_KEY=${NEXT_PUBLIC_SUPABASE_ANON_KEY}
        - NEXT_PUBLIC_SITE_URL=${NEXT_PUBLIC_SITE_URL}
    container_name: headon-template
    restart: unless-stopped
    ports:
      # Map host port 3001 to container port 3000
      # Change host port if needed to avoid conflicts
      - "3001:3000"
    environment:
      # Node environment
      - NODE_ENV=production

      # Supabase configuration
      - NEXT_PUBLIC_SUPABASE_URL=${NEXT_PUBLIC_SUPABASE_URL}
      - NEXT_PUBLIC_SUPABASE_ANON_KEY=${NEXT_PUBLIC_SUPABASE_ANON_KEY}
      - SUPABASE_SERVICE_ROLE_KEY=${SUPABASE_SERVICE_ROLE_KEY}

      # Site configuration
      - NEXT_PUBLIC_SITE_URL=${NEXT_PUBLIC_SITE_URL}

    # Health check to ensure container is running properly
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:3000/api/health', (r) => {r.statusCode === 200 ? process.exit(0) : process.exit(1)}).on('error', () => process.exit(1))"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

    # Resource limits (adjust based on your VPS capacity)
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 1G
        reservations:
          cpus: '0.5'
          memory: 512M

    # Connect to shared network for inter-container communication
    networks:
      - web-network

    # Volume for Next.js cache persistence (optional, improves rebuild times)
    volumes:
      - nextjs-cache:/app/.next/cache

  # Umami Analytics - PostgreSQL Database
  umami-db:
    image: postgres:15-alpine
    container_name: umami-db
    restart: unless-stopped
    environment:
      - POSTGRES_DB=umami
      - POSTGRES_USER=umami
      - POSTGRES_PASSWORD=${UMAMI_DB_PASSWORD:-changeme}
    volumes:
      - umami-db-data:/var/lib/postgresql/data
    networks:
      - web-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U umami"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    deploy:
      resources:
        limits:
          cpus: '0.25'
          memory: 256M
        reservations:
          cpus: '0.1'
          memory: 128M

  # Umami Analytics - Web Analytics Platform
  umami:
    image: ghcr.io/umami-software/umami:postgresql-latest
    container_name: umami
    restart: unless-stopped
    ports:
      - "3002:3000"
    environment:
      - DATABASE_URL=postgresql://umami:${UMAMI_DB_PASSWORD:-changeme}@umami-db:5432/umami
      - DATABASE_TYPE=postgresql
      - APP_SECRET=${UMAMI_APP_SECRET}
      - HOSTNAME=0.0.0.0
      - DISABLE_TELEMETRY=1
    depends_on:
      umami-db:
        condition: service_healthy
    networks:
      - web-network
    healthcheck:
      test: ["CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost:3000/api/heartbeat || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    deploy:
      resources:
        limits:
          cpus: '0.25'
          memory: 256M
        reservations:
          cpus: '0.1'
          memory: 128M

networks:
  web-network:
    # Use external network that's shared with other containers (e.g., nginx, other apps)
    external: true

volumes:
  nextjs-cache:
    driver: local
  umami-db-data:
    driver: local